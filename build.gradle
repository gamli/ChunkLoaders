buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
//apply plugin: 'eclipse'

apply plugin: 'java'
apply plugin: 'idea'
idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

version = '1.1.7-mc1.16.5'
group = 'com.supermartijn642.chunkloaders' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'chunkloaders'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'official', version: '1.16.5'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    runs {
        client {
            
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            mods {
                chunkloaders {
                    source sourceSets.main
                }
            }
            
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            mods {
                chunkloaders {
                    source sourceSets.main
                }
            }

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            args '--mod', 'chunkloaders', '--all', '--output', file('src/generated/resources/')

            mods {
                chunkloaders {
                    source sourceSets.main
                }
            }

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }
    }
}

project.tasks.whenTaskAdded({ task ->
    if (task.getName() == 'prepareRuns') {
        println "adding 'applyWorldTemplate' dependency for task " + task.toString()
        task.dependsOn('applyWorldTemplate')
    }
})

tasks.register('createWorldTemplate', Copy) {
    dependsOn 'deleteWorldTemplate'
    from layout.projectDirectory.dir('run/saves/world')
    into layout.projectDirectory.dir('run/saves/world_template')
}
tasks.register('deleteWorldTemplate', Delete) {
    delete layout.projectDirectory.dir('run/saves/world_template')
}
tasks.register('applyWorldTemplate', Copy) {
    if (file('run/saves/world_template').exists()) {
        dependsOn 'deleteWorld'
        from layout.projectDirectory.dir('run/saves/world_template')
        into layout.projectDirectory.dir('run/saves/world')
    }
}
tasks.register('deleteWorld', Delete) {
    delete layout.projectDirectory.dir('run/saves/world')
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.0'

    // Core lib
    compile fg.deobf('curse.maven:supermartijn642s-core-lib-454372:3351871')
    // Config lib
    compile fg.deobf('curse.maven:supermartijn642s-config-lib-438332:3357667')
    // FTB-Library    
    compile fg.deobf('curse.maven:ftb-library-forge-1605.3.3-build.74-404465:3476854')
    runtime fg.deobf('curse.maven:ftb-library-forge-1605.3.3-build.74-404465:3476854')
    // FTB-Teams
    compile fg.deobf('curse.maven:ftb-teams-forge-1605.2.2-build.32-404468:3460043')
    runtime fg.deobf('curse.maven:ftb-teams-forge-1605.2.2-build.32-404468:3460043')
    // FTB-Chunks
    compile fg.deobf('curse.maven:ftb-chunks-forge-1605.3.2-build.57-314906:3466965')
    runtime fg.deobf('curse.maven:ftb-chunks-forge-1605.3.2-build.57-314906:3466965')
    // Create
    compile fg.deobf('curse.maven:create-mc1.16.5_v0.3.2d-328085:3419412')
    runtime fg.deobf('curse.maven:create-mc1.16.5_v0.3.2d-328085:3419412')

    // JEI
    runtimeOnly fg.deobf('curse.maven:jei-1.16.5-7.7.1.121-238222:3438494')
    // Flywheel
    runtimeOnly fg.deobf('curse.maven:flywheel-1.16-0.2.4-486392:3459739')
    // Architectury API
    runtimeOnly fg.deobf('curse.maven:architectury-1.23.33-forge-419699:3462013')
    // Block Renderer
    runtimeOnly fg.deobf("curse.maven:block-renderer-380456:3294692")
}